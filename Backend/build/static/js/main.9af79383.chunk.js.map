{"version":3,"sources":["components/Instructions.js","services/leaderboardService.js","reducers/leaderboardReducer.js","components/Leaderboard.js","services/gameService.js","reducers/gameReducer.js","components/Game.js","components/Home.js","App.js","store.js","index.js"],"names":["Instructions","props","className","axios","get","then","res","data","leaderboardReducer","state","action","type","Leaderboard","dispatch","useDispatch","useEffect","interval","setInterval","a","leaderboardService","leaderboard","clearInterval","tableBody","useSelector","map","player","index","name","score","baseUrl","username","newObject","post","response","initialState","wins","deckCount","currentCard","defuse","names","0","1","2","3","4","5","6","cardAction","content","idx","gameReducer","cstate","Details","Button","onClick","handleClick","Stats","nextCard","Number","Math","random","toFixed","Game","gameState","gameService","Home","onSubmit","event","preventDefault","target","value","newObj","initializeGame","App","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9af79383.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Instructions = (props) => <div>\r\n    <div className=\"container\">\r\n        <div><h1>Welcome to the Exploding Kittens Game</h1></div>\r\n        <div>\r\n          This is an online single player card game which consists of 4 different type of cards – \r\n          <ul>\r\n            <li>Cat card</li>\r\n            <li>Defuse card</li>\r\n            <li>Shuffle card</li>\r\n            <li>Exploding kitten card</li>\r\n          </ul>\r\n\r\n          In the starting there will be a deck of 5 cards. Each time you click on the deck a card is revealed and that card is removed from the deck. Player wins the game once he draws all the 5 cards from the deck and there is no card left to draw. <br/>\r\n            <br></br>\r\n          Rules – \r\n          <ul>\r\n            <li>If the card drawn from deck is a cat card then the card is removed from deck. </li>\r\n            <li>If the card is exploding kitten (bomb) then the player loses the game. </li>\r\n            <li>If the card is defuse card then the card is removed from the deck. Also that card can be used to defuse one bomb that may come in subsequent cards drawn from deck. </li>\r\n            <li>If the card is shuffle card then the game is restarted and the deck is filled with 5 cards again. </li>\r\n          </ul>\r\n        </div>\r\n        <br/>\r\n        {/* <Link to=\"/game\" className=\"btn btn-lg btn-info mr-2\"> */}\r\n          {/* Start Game */}\r\n        {/* </Link> */}\r\n      </div>\r\n</div>\r\n\r\nexport default Instructions","import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:8081/api/leaderboard'\r\n\r\nconst getLeaderboard = () => {\r\n  const promise = axios.get(baseUrl)\r\n  return promise.then(res => res.data)\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport default { getLeaderboard }","import leaderboardService from \"../services/leaderboardService\"\r\n\r\nconst leaderboardReducer = (state=[], action) => {\r\n    switch(action.type) {\r\n        case 'initializeLeaderBoardState':\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeLeaderBoard = () => {\r\n    return async dispatch => {\r\n        const leaderboard = await leaderboardService.getLeaderboard()\r\n        dispatch({\r\n            type: 'initializeLeaderBoardState',\r\n            data: leaderboard\r\n        })\r\n    } \r\n} \r\n\r\nexport default leaderboardReducer\r\n","import React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport './Leaderboard.css'\r\nimport { initializeLeaderBoard } from '../reducers/leaderboardReducer';\r\n\r\nconst Leaderboard = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            dispatch(initializeLeaderBoard())\r\n        }, 1500)\r\n        return () => clearInterval(interval)\r\n    }, [dispatch])\r\n\r\n    const leaderboard = useSelector(state => state.leaderboard)\r\n\r\n    const tableBody = leaderboard.map((player, index) => (\r\n        <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td>{player.name}</td>\r\n            <td>{player.score}</td>\r\n        </tr>\r\n    ));\r\n\r\n    return (\r\n        <div className=\"leaderboard\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Rank</th>\r\n                        <th>Name</th>\r\n                        <th>Score</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tableBody}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Leaderboard","import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:8081/api/game'\r\n\r\nconst getGame = username => {\r\n  const promise = axios.get(`${baseUrl}/${username}`)\r\n  return promise.then(res => res.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const promise = axios.post(baseUrl, newObject)\r\n  return promise.then(response => response.data)\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport default { getGame, create }","import gameService from \"../services/gameService\"\r\n\r\nconst initialState =\r\n{\r\n    username: '',\r\n    wins: 0,\r\n    deckCount: 5,\r\n    currentCard: 'Draw a card',\r\n    defuse: 0,\r\n}\r\n\r\nconst names = {\r\n    0: \"Cat Card\",\r\n    1: \"Defuse card\",\r\n    2: \"Exploding kitten card\",\r\n    3: \"Shuffle card\",\r\n    4: \"Start\",\r\n    5: \"You Lost\",\r\n    6: \"You Won\"\r\n}\r\n\r\nconst gameReducer = (state = [], action) => {\r\n    const cstate = {...state}\r\n    switch (action.type) {\r\n        case 'initGameState':\r\n            return action.data\r\n        case 'CAT':\r\n            cstate.deckCount--\r\n            cstate.currentCard = action.data\r\n            break\r\n        case 'DEFUSE':\r\n            cstate.deckCount--\r\n            cstate.defuse++\r\n            cstate.currentCard = action.data\r\n            break\r\n        case 'EXPLODE':\r\n            if (cstate.defuse >= 1) {\r\n                cstate.defuse--\r\n                cstate.deckCount--\r\n            } else {\r\n                cstate.deckCount = 5\r\n                cstate.defuse = 0\r\n                cstate.currentCard = action.data\r\n                return cstate\r\n            }\r\n            cstate.currentCard = action.data\r\n            break\r\n        case 'SHUFFLE':\r\n            cstate.deckCount = 5\r\n            cstate.defuse = 0\r\n            cstate.currentCard = action.data\r\n            break\r\n        default:\r\n            return state;\r\n    }\r\n    if (cstate.deckCount === 0) {\r\n        cstate.deckCount = 5\r\n        cstate.defuse = 0\r\n        cstate.wins++\r\n        cstate.currentCard = names[6]\r\n    }\r\n    return cstate\r\n}\r\n\r\nexport const cardAction = ([content, idx]) => {\r\n    return {\r\n        type: content,\r\n        data: names[idx],\r\n    }\r\n}\r\n\r\nexport const initializeGame = (content) => {\r\n    return async dispatch => {\r\n        if(!content) content = 'unknown'\r\n        let gameState = await gameService.getGame(content)\r\n        if(gameState === '') {\r\n            let newObj = initialState\r\n            initialState.username = content\r\n            await gameService.create(newObj)\r\n            gameState = newObj\r\n        }\r\n        dispatch({\r\n            type: 'initGameState',\r\n            data: gameState\r\n        })\r\n    }\r\n}\r\n\r\nexport default gameReducer","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { cardAction } from '../reducers/gameReducer'\r\nimport gameService from '../services/gameService'\r\nimport './Game.css'\r\n\r\nconst Details = ({ state }) => (\r\n    <div className=\"block\">\r\n        <div className=\"inner-block\">\r\n            <p>Cards in deck : {state.deckCount}</p>\r\n            <br />\r\n            <p>Card : {state.currentCard}</p>\r\n            <br />\r\n            <p>Defuse Cards left: {state.defuse}</p>\r\n        </div>\r\n    </div>)\r\n\r\nconst Button = (props) => (\r\n    <div className=\"block\">\r\n        <div className=\"inner-block\">\r\n            <button onClick={props.handleClick}>\r\n                Draw a card\r\n            </button>\r\n        </div></div>\r\n)\r\n\r\nconst Stats = ({ state }) => {\r\n\r\n    return (\r\n        <div className=\"block\">\r\n            <div className=\"inner-block\">\r\n                <p>Wins : {state.wins}</p>\r\n                <br />\r\n                <p>Username : {state.username}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst nextCard = () => {\r\n    const cards = ['CAT', 'DEFUSE', 'EXPLODE', 'SHUFFLE']\r\n    const idx = Number((Math.random() * 3).toFixed(0))\r\n    const chosenOne = cards[idx]\r\n    return [chosenOne, idx]\r\n}\r\n\r\nconst Game = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const gameState = useSelector(state => state.gameState)\r\n\r\n    const handleClick = async () => {\r\n        await dispatch(cardAction(nextCard()))\r\n        gameService.create(gameState)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Stats state={gameState} />\r\n                <Details state={gameState} />\r\n                <Button handleClick={handleClick} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game","import React from 'react'\r\nimport Instructions from './Instructions'\r\nimport Leaderboard from './Leaderboard'\r\nimport Game from './Game'\r\nimport './Home.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { initializeGame } from '../reducers/gameReducer';\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const addUsername = (event) => {\r\n        event.preventDefault()\r\n        const content = event.target.username.value\r\n        event.target.username.value = ''\r\n        dispatch(initializeGame(content))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"home-row\">\r\n                <form onSubmit={addUsername}>\r\n                    Username: <input name=\"username\" />\r\n                    <button type=\"submit\">Start Game</button>\r\n                </form>\r\n            </div>\r\n            <div className=\"home-row\">\r\n                <Game />\r\n                <Leaderboard />\r\n            </div>\r\n            <Instructions />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import './App.css';\r\nimport Home from './components/Home'\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        Exploding Kittens\r\n      </header>\r\n    </div>\r\n    <Home/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport gameReducer from './reducers/gameReducer'\r\nimport leaderboardReducer from './reducers/leaderboardReducer'\r\n\r\nconst reducer = combineReducers({\r\n    gameState: gameReducer,\r\n    leaderboard: leaderboardReducer\r\n  })\r\n  \r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport './index.css'\r\nimport App from './App';\r\nimport store from './store'\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}